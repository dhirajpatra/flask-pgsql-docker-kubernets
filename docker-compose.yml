version: '3.7'

services:

  # Nginx reverse proxy
  nginx-prod:
    container_name: nginx-prod
    restart: always
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    ports:
      # - 5000:80
      - 80:80 # for production
      # - 443:443
    depends_on:
      - webservice
    # network_mode: "host"

  webservice:
    container_name: webservice
    build: ./services/web
#    command: python manage.py run -h 0.0.0.0
#    command: gunicorn --bind 0.0.0.0:5000 manage:app
    volumes:
      - ./services/web/:/usr/src/app/
    ports:
      - 5000:5000
    env_file:
      - ./.env.dev
#      - ./env.prod

  pgsql:
    container_name: pgsql
    image: postgres:10.14-alpine
    volumes:
      - postgres-data-volume:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=hello_flask_dev

volumes:
  postgres-data-volume: